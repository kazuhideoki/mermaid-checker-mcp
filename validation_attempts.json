[
  {
    "attempt": 1,
    "code": "flowchart LR\n  subgraph Forward(順伝播)\n    X0[\"入力埋め込み X^0\"] --> L1[\"層1 (注意→FFN→残差+LN)\"] --> L2[\"層2\"] --> L3[\"… 層N\"]\n    L3 --> Logits[\"最終線形 → ソフトマックス\"]\n    Logits --> Loss[\"損失(クロスエントロピー)\"]\n  end\n\n  subgraph Backward(逆伝播)\n    Loss -.勾配→ Logits -.→ L3 -.→ L2 -.→ L1 -.→ X0\n  end",
    "result": {
      "valid": false,
      "reason": "Parse error on line 2: ...R  subgraph Forward(順伝播)    X0[\"入力埋め込み ----------------------^ Expecting 'SEMI', 'NEWLINE', 'SPACE', 'EOF', 'GRAPH', 'DIR', 'subgraph', 'SQS', 'end', 'AMP', 'COLON', 'START_LINK', 'STYLE', 'LINKSTYLE', 'CLASSDEF', 'CLASS', 'CLICK', 'DOWN', 'UP', 'NUM', 'NODE_STRING', 'BRKT', 'MINUS', 'MULT', 'UNICODE_TEXT', got 'PS'"
    }
  },
  {
    "attempt": 2,
    "code": "flowchart LR\n  subgraph Forward[\"Forward（順伝播）\"]\n    X0[\"入力埋め込み X^0\"] --> L1[\"層1 (注意→FFN→残差+LN)\"] --> L2[\"層2\"] --> L3[\"… 層N\"]\n    L3 --> Logits[\"最終線形 → ソフトマックス\"]\n    Logits --> Loss[\"損失(クロスエントロピー)\"]\n  end\n\n  subgraph Backward[\"Backward（逆伝播）\"]\n    Loss -. 勾配 .-> Logits -.-> L3 -.-> L2 -.-> L1 -.-> X0\n  end",
    "result": {
      "valid": false,
      "reason": "DOMPurify.addHook is not a function. (In 'DOMPurify.addHook(\"beforeSanitizeAttributes\", (node) => {\\n    if (node.tagName === \\\"A\\\" && node.hasAttribute(\\\"target\\\"))\\n      node.setAttribute(\\\"data-temp-href-target\\\", node.getAttribute(\\\"target\\\") ?? \\\"\\\");\\n  })', 'DOMPurify.addHook' is undefined)"
    }
  }
]

